import boto3
from botocore.exceptions import ClientError

def get_dynamodb_resource(region='us-east-1'):
    """Create DynamoDB resource using instance role"""
    try:
        dynamodb = boto3.resource('dynamodb', region_name=region)
        # test connection
        print("Listing tables to test connection...")
        tables = list(dynamodb.tables.all())
        print("Connected. Existing tables:")
        for table in tables:
            print(f" - {table.name}")
        return dynamodb
    except ClientError as e:
        print("Failed to connect to DynamoDB:", e)
        raise

def create_table_if_not_exists(dynamodb, table_name):
    """Create table if it doesn't exist"""
    existing_tables = [table.name for table in dynamodb.tables.all()]
    
    if table_name in existing_tables:
        print(f"Table '{table_name}' already exists.")
        return

    print(f"Creating table '{table_name}'...")
    try:
        table = dynamodb.create_table(
            TableName=table_name,
            KeySchema=[
                {'AttributeName': 'id', 'KeyType': 'HASH'},  # Partition key
            ],
            AttributeDefinitions=[
                {'AttributeName': 'id', 'AttributeType': 'S'},
            ],
            ProvisionedThroughput={
                'ReadCapacityUnits': 5,
                'WriteCapacityUnits': 5
            }
        )

        table.wait_until_exists()
        print(f"Table '{table_name}' created successfully.")
    except ClientError as e:
        print("Failed to create table:", e)

if __name__ == '__main__':
    dynamodb = get_dynamodb_resource(region='us-east-1')  # Change if you're in another region
    create_table_if_not_exists(dynamodb, 'MyTestTable')
